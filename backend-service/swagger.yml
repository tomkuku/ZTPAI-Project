openapi: 3.0.0
info:
  title: User API
  version: 1.0.0

paths:
  /v1/user/create:
    post:
      summary: Creates new service user.
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequestDto'
      responses:
        '201':
          description: New user created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'

  /v1/user/get/{id}:
    get:
      summary: Get user by id.
      operationId: getUserById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: User ID.
      responses:
        '200':
          description: New user fetched successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'

  /v1/user/getall:
    get:
      summary: Get all users.
      operationId: getAllUsers
      responses:
        '200':
          description: All users fetched successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'

  /v1/user/getByEmail:
    get:
      summary: Get user by email.
      operationId: getUserByEmail
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
          description: User email.
      responses:
        '200':
          description: User fetched successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '404':
          description: User not found.
  
  /v1/servicerequest/create:
    post:
      summary: Creates new service request.
      operationId: createServiceRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestCreateRequestDto'
      responses:
        '201':
          description: New service request created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestDto'

  /v1/servicerequest/get/{id}:
    get:
      summary: Get service request by id.
      operationId: getServiceRequestById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Service request ID.
      responses:
        '200':
          description: New service request fetched successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestDto'

  /v1/servicerequest/getall:
    get:
      summary: Get all service requests.
      operationId: getAllServiceRequests
      responses:
        '200':
          description: All service requests fetched successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceRequestDto'

components:
  schemas:
    UserDto:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        password:
          type: string
        name:
          type: string
        surname:
          type: string
        type:
          type: integer

    UserCreateRequestDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
        surname:
          type: string
        type:
          type: integer
          
    ServiceRequestDto:
      type: object
      properties:
        id:
          type: integer
        bikeName:
          type: string
        description:
          type: string
        price:
          type: string
        ownerId:
          type: integer
        isAccepted:
          type: boolean
        creationTime:
          type: string
          format: date-time

    ServiceRequestCreateRequestDto:
      type: object
      properties:
        bikeName:
          type: string
        description:
          type: string
        price:
          type: string
        ownerId:
          type: integer

    ServiceRequestEntity:
      type: object
      properties:
        id:
          type: integer
        bikeName:
          type: string
        description:
          type: string
        price:
          type: string
        ownerId:
          type: integer
        isAccepted:
          type: boolean
        creationTime:
          type: string
          format: date-time
